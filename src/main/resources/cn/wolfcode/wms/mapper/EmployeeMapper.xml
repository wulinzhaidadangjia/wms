<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.wms.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="cn.wolfcode.wms.domain.Employee">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="age" property="age"/>
        <result column="admin" property="admin"/>
        <association property="dept" javaType="Department">
            <id column="d_id" property="id"/>
            <result column="d_name" property="name"/>
            <result column="d_sn" property="sn"/>
        </association>
        <collection property="roles" ofType="role" column="id"
                    select="cn.wolfcode.wms.mapper.RoleMapper.selectByEmployeeId"/>
    </resultMap>
    <delete id="deleteByPrimaryKey">
        DELETE FROM employee
        WHERE id = #{id}
    </delete>
    <delete id="deleteRelation">
        DELETE FROM employee_role
        WHERE employee_id = #{id}
    </delete>
    <delete id="batchDelete">
        delete from employee WHERE id in
        <foreach collection="array" open="(" item="ele" separator="," close=")">
            #{ele}
        </foreach>
    </delete>
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO employee (name, password, email, age, admin, dept_id)
        VALUES (#{name}, #{password}, #{email}, #{age}, #{admin}, #{dept.id})
    </insert>
    <insert id="insertRelation">
        INSERT employee_role (employee_id, role_id) VALUES (#{employeeId}, #{roleId})
    </insert>
    <update id="updateByPrimaryKey">
        UPDATE employee
        SET name     = #{name},
            password = #{password},
            email    = #{email},
            age      = #{age},
            admin    = #{admin},
            dept_id  = #{dept.id}
        WHERE id = #{id}
    </update>
    <sql id="where_column">
        SELECT
            e.id,
            e.name,
            e.password,
            e.email,
            e.age,
            e.admin,
            d.id   d_id,
            d.name d_name,
            d.sn   d_sn
    </sql>
    <sql id="where_table">
        from employee e LEFT JOIN department d ON e.dept_Id=d.id
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        <include refid="where_column"/>
        <include refid="where_table"/>
        WHERE e.id=#{id}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <include refid="where_column"/>
        <include refid="where_table"/>
    </select>
    <sql id="where_sql">
        <where>
            <if test="null!=keyword and ''!=keyword">
                AND ( e.name LIKE concat ('%',#{keyword},'%')OR e.email LIKE concat ('%',#{keyword},'%') )
            </if>
            <if test="null!=dept_id and ''!=dept_id">
                AND dept_id=#{dept_id}
            </if>
        </where>
    </sql>
    <select id="query4Count" resultType="int">
        SELECT COUNT(e.id) FROM employee e
        <include refid="where_sql"/>
    </select>
    <select id="query4List" resultMap="BaseResultMap">
        <include refid="where_column"/>
        <include refid="where_table"/>
        <include refid="where_sql"/>
        limit #{startIndex},#{pageSize}
    </select>
    <select id="checkLogin" resultMap="BaseResultMap">
        SELECT *
        FROM employee e
        WHERE name = #{username} AND password = #{password}
    </select>
    <select id="getExpression" resultType="string">
        SELECT p.expression
        FROM permission p LEFT JOIN role_permission rp ON p.id = rp.permission_id
            LEFT JOIN
            employee_role er ON rp.role_id = er.role_id
        WHERE er.employee_id = #{id}
    </select>
</mapper>